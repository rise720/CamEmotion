<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	<!-- 引入配置文件 -->
<!-- 	<bean id="propertyConfigurer" -->
<!-- 		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> -->
<!-- 		<property name="location" value="classpath:db.properties" /> -->
<!-- 	</bean> -->

	<!-- 数据源 -->
<!-- 	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" -->
<!-- 		destroy-method="close"> -->
<!-- 		<property name="jdbcUrl" value="${db.url}"></property> 连接URL,由db.properties 引入 -->
<!-- 		<property name="driverClass" value="${db.driverClassName}"></property>数据库驱动,由db.properties 引入 -->
<!-- 		<property name="user" value="${db.username}"></property>用户名,由db.properties 引入 -->
<!-- 		<property name="password" value="${db.password}"></property>用户密码,由db.properties 引入 -->
<!-- 		<property name="maxPoolSize" value="30"></property>最大连接数 -->
<!-- 		<property name="minPoolSize" value="1"></property>最小连接数 -->
<!-- 		<property name="initialPoolSize" value="0"></property>初始连接数 -->
<!-- 		<property name="maxIdleTime" value="60"></property>	连接的最大空闲时间，超过此时间未被使用，将被回收,单位:秒, 默认: 0 -->
<!-- 		当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待,单位:毫秒,默认: 0 -->
<!--         <property name="checkoutTimeout" value="30000"/> -->
<!--         <property name="idleConnectionTestPeriod" value="60" />测试空闲连接的间隔时间,单位:秒, 默认: 0 -->
<!--         <property name="preferredTestQuery" value="select 1 " /> 测试连接的有效性 -->
<!-- 	</bean> -->

	<!-- was或tomcat窗口数据源 -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
<!-- 			<value>jdbc/e-BankingES</value> --><!-- webSphere 专用 -->
			<value>java:comp/env/jdbc/jndiDB</value><!-- tomcat 专用 -->
		</property>
	</bean>
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/cac/CamEmotion/mapping/*.xml"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cac.CamEmotion.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 声明式注解事务管理 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- 自动扫描机制 -->
	<context:component-scan base-package="com.cac.CamEmotion.service" />
</beans>