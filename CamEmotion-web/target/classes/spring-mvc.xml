<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
						http://www.springframework.org/schema/task  
        				http://www.springframework.org/schema/task/spring-task-4.1.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<!-- 不同的模块,配置不同的扫描路径,允许配置多个路径 -->
	<!-- START -->
	<context:component-scan base-package="com.cac.CamEmotion.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
	<context:component-scan base-package="com.cac.CamEmotion.resource">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
	<context:component-scan base-package="com.cac.CamEmotion.springmvc.exception">
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<context:component-scan base-package="com.cac.CamEmotion.springmvc.resource">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- 扫描任务 -->
    <context:component-scan base-package="com.cac.CamEmotion.task" ></context:component-scan>
	<!-- END -->
	<!-- task任务扫描注解 -->
	<task:annotation-driven/>
	
    
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<!-- 
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		 -->
	</bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 

	<!--bean的名称必须定义为messageSource  -->
    <bean id="messageSource"
    	class="org.springframework.context.support.ResourceBundleMessageSource">
       <property name="basenames">
           <!-- 前面的是包名，messages是配置文件的前缀 -->
   			<list>
   				<value>error</value>	<!-- 错误消息定义 -->
	        	<value>messages</value>	<!-- 画面标签定义 -->
	        	<value>messages-validator</value>	<!-- 表单校验消息定义 -->
   			</list>
       </property>
    </bean>
    
    <!-- ConversionService 日期转换 -->
    <bean id="conversionService"  
	    class="org.springframework.format.support.FormattingConversionServiceFactoryBean">  
	    <property name="formatters">  
	        <set>  
	            <bean class="com.cac.CamEmotion.date.DateFormatter"></bean>  
	        </set>  
	    </property>  
	</bean>
	
	<!-- 表单数据校验器 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
	
	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven validator="validator" conversion-service="conversionService"/>
    
    <!-- 配置多个拦截器 -->
    <mvc:interceptors>
    	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
    		<property name="paramName" value="lang"/>
    	</bean>
    	
    	<!-- 用户登录验证拦截器 -->
    	<mvc:interceptor>
    		<mvc:mapping path="/api/**"/>
    		<!-- 用exclude-mapping排除不需要拦截的目录 -->
    		<mvc:exclude-mapping path="/api/notlogged"/>	<!-- 提示未登录提示入口 -->
    		<mvc:exclude-mapping path="/api/error_404"/>	<!-- 404错误提示消息 -->
    		<mvc:exclude-mapping path="/api/error_500"/>	<!-- 500错误提示消息 -->
    		<mvc:exclude-mapping path="/api/nopermission"/>	<!-- 没有权限提示消息 -->
    		<mvc:exclude-mapping path="/api/antiSQL"/>		<!-- SQL注入错误 -->
    		<bean class="com.cac.CamEmotion.springmvc.interceptor.LoginInterceptor"></bean>
    	</mvc:interceptor>
    	
    	<!-- html页面的权限控制 -->
    	<mvc:interceptor>
    		<mvc:mapping path="/html/**"/>
    		<!-- 用exclude-mapping排除不需要拦截的目录 -->
    		<mvc:exclude-mapping path="/html/test.html"/>	<!-- 测试代码 -->
    		<mvc:exclude-mapping path="/html/error/err.html"/>	<!-- 错误提示页面 -->
    		<bean class="com.cac.CamEmotion.springmvc.interceptor.HTMLAuthInterceptor"></bean>
    	</mvc:interceptor>
    	
    	<!-- api访问权限的控制 -->
    	<mvc:interceptor>
    		<mvc:mapping path="/api/**"/>
    		<!-- 用exclude-mapping排除不需要拦截的目录 -->
    		<mvc:exclude-mapping path="/api/notlogged"/>	<!-- 提示未登录提示入口 -->
    		<mvc:exclude-mapping path="/api/error_404"/>	<!-- 404错误提示消息 -->
    		<mvc:exclude-mapping path="/api/error_500"/>	<!-- 500错误提示消息 -->
    		<mvc:exclude-mapping path="/api/nopermission"/>	<!-- 没有权限提示消息 -->
    		<mvc:exclude-mapping path="/api/antiSQL"/>		<!-- SQL注入错误 -->
    		<bean class="com.cac.CamEmotion.springmvc.interceptor.AuthInterceptor"></bean>
    	</mvc:interceptor>
    </mvc:interceptors>
    
    <!-- ================================================================ -->
    <!-- 配置式异常处理修改为注解式异常处理，所有返回内容改为json格式 -->
    <!-- 使用SimpleMappingExceptionResolver实现异常捕获  -->
    <!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">   -->
        <!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->  
        <!-- <property name="defaultErrorView" value="error"></property>   -->
        <!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->  
        <!-- <property name="exceptionAttribute" value="exception"></property>   -->
        <!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->  
        <!-- <property name="exceptionMappings">   -->
            <!-- <props>   -->
                <!-- <prop key="com.cac.CamEmotion.exception.BIException">background/error/error-bi</prop>   -->
                <!-- <prop key="com.cac.CamEmotion.exception.SysException">background/error/error-sys</prop> -->
                <!-- <prop key="java.lang.Throwable">background/error/error</prop>   -->
            <!-- </props>   -->
        <!-- </property>   -->
    <!-- </bean>   -->
</beans>